@startuml

!include ../styling.iuml


actor "User Agent"
participant "Abstract\nAuthenticationFilter"
participant "OAuth2Login\nAuthenticationFilter"
participant "HttpSessionOAuth2\nAuthorizationRequestRepository"
participant "ClientRegistration\nRepository"
participant "Authentication\nManager"
participant "OAuth2Login\nAuthenticationProvider"

"User Agent" -> "Abstract\nAuthenticationFilter": "call /login/oauth2/code/keycloak"
activate "Abstract\nAuthenticationFilter"
"Abstract\nAuthenticationFilter" -> "OAuth2Login\nAuthenticationFilter": "attemptAuthentication"
activate "OAuth2Login\nAuthenticationFilter"
"OAuth2Login\nAuthenticationFilter" -> "HttpSessionOAuth2\nAuthorizationRequestRepository": "removeAuthorizationRequest"
"OAuth2Login\nAuthenticationFilter" -> "ClientRegistration\nRepository": "findByRegistrationId"
"OAuth2Login\nAuthenticationFilter" -> "ClientRegistration\nRepository": "findByRegistrationId"

"OAuth2Login\nAuthenticationFilter" -> "Authentication\nManager" : authenticate
activate "Authentication\nManager"
"Authentication\nManager" -> "OAuth2Login\nAuthenticationProvider" : authenticate
activate "OAuth2Login\nAuthenticationProvider"
"OAuth2Login\nAuthenticationProvider" -> "OAuth2AuthorizationCode\nAuthenticationProvider" : authenticate
"OAuth2Login\nAuthenticationProvider" <- "OAuth2AuthorizationCode\nAuthenticationProvider" : authenticate
"Authentication\nManager" <- "OAuth2Login\nAuthenticationProvider" : authenticate
deactivate "OAuth2Login\nAuthenticationProvider"
"OAuth2Login\nAuthenticationFilter" <- "Authentication\nManager" : authenticate
deactivate "Authentication\nManager"

"OAuth2Login\nAuthenticationFilter" -> "AuthenticatedPrincipal\nOAuth2AuthorizedClientRepository": saveAuthorizedClient()
"Abstract\nAuthenticationFilter" <- "OAuth2Login\nAuthenticationFilter"
deactivate "OAuth2Login\nAuthenticationFilter"


@enduml